%%[(0 core)
%include lhs2TeX.fmt
%include afp.fmt
%%]

%%[(8 core) hs import (Data.Bits)
%%]
%%[(8 core) ag
DATA Id
	| Id
		value : {String}
TYPE DottedName = [Id]
TYPE DottedNameL = [DottedName]

DATA Decl
	| Assembly
		name : DottedName
		info : AsmDeclL
	| AssemblyExtern
		name : DottedName
		info : AsmRefDeclL
	| Class
		header : ClassHeader
		members : ClassMemberL
	| Field
		decl : FieldDecl
	| Method
		header : MethodHeader
		body : MethodBodyItemL
TYPE DeclL = [Decl]

DATA AsmDecl
	| Ver
		a : {Int}
		b : {Int}
		c : {Int}
		d : {Int}
	| HashAlgorithm
		algo : {Int}
TYPE AsmDeclL = [AsmDecl]
		
DATA AsmRefDecl
	| Ver
		a : {Int}
		b : {Int}
		c : {Int}
		d : {Int}
	| PubKeyToken
		token : {[Int]}
TYPE AsmRefDeclL = [AsmRefDecl]

DATA ClassHeader
	| ClassHeader
		attrs : ClassAttrL
		name : Id
		extends : TypeSpecL

DATA ClassAttr
	| Abstract
	| Ansi
	| Auto
	| Explicit
	| Interface
	| Private
	| Public
TYPE ClassAttrL = [ClassAttr]

DATA ClassMember
	| Class
		header : ClassHeader
		members : ClassMemberL
	| Field
		decl : FieldDecl
	| Method
		header : MethodHeader
		body : MethodBodyItemL
TYPE ClassMemberL = [ClassMember]

DATA FieldDecl
	| FieldDecl
		byteOffset : {Maybe Int}
		attrs : FieldAttrL
		ty : Type
		name : Id

DATA FieldAttr
	| Family
	| Private
	| Public
	| RtSpecialName
	| SpecialName
	| Static
TYPE FieldAttrL = [FieldAttr]

DATA Type
  | GenTypeParam
      index : {Int}
  | GenMethodParam
      index : {Int}
	| Bool
	| Char
	| Class
		ref : TypeReference
  | NativeInt
  | NativeUInt
	| Object
	| String
  | GenType
      base : Type
      args : TypeL
	| Void
TYPE TypeL = [Type]

DATA TypeSpec
	| External
		module : DottedName
	| Ref
		ref : TypeReference
	| Type
		ty : Type
TYPE TypeSpecL = [TypeSpec]
TYPE MbTypeSpec = MAYBE TypeSpec

DATA TypeReference
	| Ref
		scope : MbResolutionScope
		name : DottedNameL

DATA ResolutionScope
	| Module
		fname : {String}
	| AssemblyRefName
		name : AssemblyRefName
TYPE MbResolutionScope = MAYBE ResolutionScope
DATA AssemblyRefName
	| AssemblyRefName
		name : DottedName

DATA MethodHeader
	| MethodHeader
		attr : MethAttrL
		conv : MbCallConv
		ty : Type
		name : MethodName
		params : ParamL

DATA MethodName
	| Cctor
	| Ctor
	| Name
		name : DottedName
DATA Param
	| Param
		attrs : ParamAttrL
		ty : Type
		id : MbId
TYPE ParamL = [Param]
DATA ParamAttr
	| In
	| Opt
	| Out
TYPE ParamAttrL = [ParamAttr]

DATA MethodBodyItem
	| EntryPoint
	| Locals
		init : {Bool}
		locals : LocalL
	| MaxStack
		size : {Int}
	| Instr
		instr : Instruction
	| Label
		id : Id
	| Comment -- Not actually part of MethodBodyItem, but a convenient place to dump some comments
		data : {String}
  | Raw
    data : {String}
TYPE MethodBodyItemL = [MethodBodyItem]

DATA Instruction
	| Ret
	| LdArg
		index : {Int}
	| LdStr
		value : {String}
	| LdcI4
		value : {Int}
	| LdNull
	| LdLoc
		index : {Int}
	| StLoc
		index : {Int}
	| LdFld
		ty : Type
		cls : TypeSpec
		id : Id
	| StFld
		ty : Type
		cls : TypeSpec
		id : Id
	| Tail
	| CallVirt
		conv : CallConv
		ret : Type
		cls : MbTypeSpec
		name : MethodName
		params : ParamL
	| Call
		conv : CallConv
		ret : Type
		cls : MbTypeSpec
		name : MethodName
		params : ParamL
	| NewObj
		conv : CallConv
		ret : Type
		cls : MbTypeSpec
		name : MethodName
		params : ParamL
	| Box
		cls : TypeSpec
  | UnboxAny
    cls : TypeSpec
	| IsInst
		cls : TypeSpec
	| Pop
	| BrFalse
		label : Id
	| BrTrue
		label : Id

DATA CallConv
	| CallConv
		instance : {Bool}
		explicit : {Bool}
		kind : CallKind
TYPE MbCallConv = MAYBE CallConv

DATA CallKind
	| Default

DATA Local
	| Local
		ty : Type
		id : MbId
TYPE MbId = MAYBE Id
TYPE LocalL = [Local]

DATA MethAttr
	| Abstract
	| Family
	| NewSlot
	| Private
	| Public
	| RtSpecialName
	| SpecialName
	| Static
	| Virtual
TYPE MethAttrL = [MethAttr]
		
--- Old
{-
DATA Variable
	| Variable
		type : Type
		name : MbVarName
TYPE MbVarName = MAYBE Id
TYPE VariableL = [Variable]

DATA Method
	| Method
		modifiers : {[String]}
		returnType : Type
		name : Id
		arguments : VariableL
		instructions : InstructionL
TYPE MethodL = [Method]

DATA Class
	| Class
		modifiers : {[String]}
		name : Id
		extends : MbExtends
		fields : FieldL
		methods : MethodL
TYPE ClassL = [Class]
TYPE MbExtends = MAYBE Id

DATA Field
	| Field
		modifiers : {[String]}
		var : Variable
TYPE FieldL = [Field]

TYPE InstructionL = [Instruction]
-}
%%]
